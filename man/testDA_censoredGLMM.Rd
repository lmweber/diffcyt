% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testDA_censoredGLMM.R
\name{testDA_censoredGLMM}
\alias{testDA_censoredGLMM}
\title{Test for differential abundance: method 'diffcyt-DA-censored-GLMM'}
\usage{
testDA_censoredGLMM(
  d_counts,
  formula,
  contrast,
  mi_reps = 10,
  imputation_method = c("km", "rs", "mrl", "cc", "pmm"),
  min_cells = 3,
  min_samples = 3,
  normalize = FALSE,
  norm_factors = "TMM",
  BPPARAM = BiocParallel::SerialParam(),
  verbose = FALSE
)
}
\arguments{
\item{d_counts}{\code{\link{SummarizedExperiment}} object containing cluster cell
counts, from \code{\link{calcCounts}}.}

\item{formula}{Model formula object, see \code{\link{testDA_GLMM}} and for more 
details \code{\link{createFormula}}. Be aware of the special format required 
for the censored covariate: instead of just the covariate name (e.g. 'X') the 
columnname of the data being an event indicator (e.g. 'I', with 'I' = 1 if 
'X' is observed and 'I' = 0 if 'X' is censored, ) needs to specified as well. 
The notation in the formula is then 'Surv(X,I)'.}

\item{contrast}{Contrast matrix, created with \code{\link{createContrast}}. See
\code{\link{createContrast}} for details.}

\item{mi_reps}{number of imputations in multiple imputation. default = 10.}

\item{imputation_method}{which method should be used in the imputation step. One of
'km', 'rs', 'mrl', 'cc', 'pmm'. See details. default = 'km'.}

\item{min_cells}{Filtering parameter. Default = 3. Clusters are kept for differential
testing if they have at least \code{min_cells} cells in at least \code{min_samples}
samples.}

\item{min_samples}{Filtering parameter. Default = \code{number of samples / 2}, which
is appropriate for two-group comparisons (of equal size). Clusters are kept for
differential testing if they have at least \code{min_cells} cells in at least
\code{min_samples} samples.}

\item{normalize}{Whether to include optional normalization factors to adjust for
composition effects (see details). Default = FALSE.}

\item{norm_factors}{Normalization factors to use, if \code{normalize = TRUE}. Default =
\code{"TMM"}, in which case normalization factors are calculated automatically using
the 'trimmed mean of M-values' (TMM) method from the \code{edgeR} package.
Alternatively, a vector of values can be provided (the values should multiply to 1).}

\item{BPPARAM}{specify parallelization option as one of 
\code{\link[BiocParallel]{BiocParallelParam}}.
e.g. \code{\link[BiocParallel]{MulticoreParam}}(workers=2) for parallelization 
with two cores. Default = \code{\link[BiocParallel]{SerialParam}}()
(no parallelization). Parallelization works only if 'BiocParallel' is available.}

\item{verbose}{Logical.}
}
\value{
Returns a new \code{\link{SummarizedExperiment}} object, with differential test
  results stored in the \code{rowData} slot. Results include raw p-values
  (\code{p_val}) and adjusted p-values (\code{p_adj}), which can be used to rank
  clusters by evidence for differential abundance. The results can be accessed with the
  \code{\link{rowData}} accessor function.
}
\description{
Calculate tests for differential abundance of cell populations using method
'diffcyt-DA-censored-GLMM'
}
\details{
Calculates tests for differential abundance of clusters, using generalized linear mixed
models (GLMMs) where a covariate is subject to right censoring.

The same underlying testing as described in \code{\link{testDA_GLMM}} is 
applied here. The main difference is that multiple imputation is used to 
handle a censored covariate. In short, multiple imputation consists of three
steps: imputation, analysis and pooling. In the imputation step multiple complete
data sets are generated by imputation. The imputed data is then analysed in 
the second step and the results are combined in the third step. See also \code{\link[mice]{pool}}.
The imputation in the second step is specific for censored data in contrast to 
the 'normal' use of multiple imputation where some data is missing (See Details). 
Alternativaly the samples with censored data can be removed (complete case analysis) 
or the censored values can be treated as missing (predictive mean matching) (See Details).

Possible methods in 'imputation_method' are:
\describe{
  \item{'km'}{Kaplan Meier imputation is similar to 'rs' (Risk set imputation) 
              but the random draw is according to the survival function of
              the respective risk set.}
  \item{'rs'}{Risk Set imputation replaces the censored values with a random
              draw from the risk set of the respective censored value.}
  \item{'mrl'}{Mean Residual Life (Conditional single imputation from 
               \href{https://www.researchgate.net/publication/319246304_Improved_conditional_imputation_for_linear_regression_with_a_randomly_censored_predictor}{Atem et al. 2017})
               is a multiple imputation procedure that bootstraps the data and
               imputes the censored values by replacing them with their 
               respective mean residual life.}
  \item{'cc'}{complete case (listwise deletion) analysis removes incomlete samples.}
  \item{'pmm'}{predictive mean matching treats censored values as missing and
               uses predictive mean matching method from \code{\link[mice]{mice}}.}
}
}
\examples{
# formula for dependency in the data
data_formula <- formula(counts ~ Surv(survival_time, event_indicator) + group_id + (1 | sample_id))

# create small data set with 4 clusters with 10 samples.
d_counts <- simulate_data(
 n = 10,
 formula = data_formula,
 n_levels_fixeff = 2,
 type = "glmer",
 b = list(b=c(-5,-2,0.2)),
 number_of_clusters = 4,
 number_of_differential_clusters = 1)

# extract covariates data.frame
experiment_info <- SummarizedExperiment::colData(d_counts)

# create model formula object
da_formula <- createFormula(experiment_info, 
                            cols_fixed = c("survival_time", "group_id"),
                            cols_random = "sample_id", 
                            event_indicator = "event_indicator")

# create contrast matrix
contrast <- createContrast(c(0, 1, 0))

# run testing with imputation method 'km' 
outs <- testDA_censoredGLMM(d_counts = d_counts, formula = da_formula,
                           contrast = contrast, m = 2, imputation_method = "km")

}
