% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testDA_censoredGLMM.R
\name{testDA_censoredGLMM}
\alias{testDA_censoredGLMM}
\title{Test for differential abundance: method 'censcyt-DA-GLMM'}
\usage{
testDA_censoredGLMM(
  d_counts,
  formula,
  contrast,
  m = 100,
  method_est = c("mrl", "rs", "km", "cc", "pmm"),
  min_cells = 3,
  min_samples = 3,
  BPPARAM = BiocParallel::SerialParam(),
  verbose = FALSE
)
}
\arguments{
\item{d_counts}{\code{\link[SummarizedExperiment]{SummarizedExperiment}}
object containing cluster cell counts, from \code{\link[diffcyt]{calcCounts}}.}

\item{formula}{See \code{\link[diffcyt]{createFormula}}
for details but make sure to specify the 'formula$formula' as follows: The
censored predictor is encoded as Surv(censored_variable, censoring_indicator)'.
e.g. y~Surv(x,I)}

\item{contrast}{Contrast matrix, created with
\code{\link[diffcyt]{createContrast}}.}

\item{m}{number of repetition for multiple imputation. default is m=100.}

\item{method_est}{which method should be used in the imputation step. One of
'cc', 'pmm', 'mrl', 'rs', 'km'. See details.}

\item{min_cells}{positive Integer. The minimum number of cells a population
needs to have to be included. Default = 3.}

\item{min_samples}{postive Integer. The minimum number of samples to still
fit a model. Default = 3.}

\item{BPPARAM}{specify parallelization option as one of 
\code{\link[BiocParallel]{BiocParallelParam}}.
e.g. \code{\link[BiocParallel]{MulticoreParam}}(workers=2) for parallelization 
with two cores. Default = \code{\link[BiocParallel]{SerialParam}} 
(no parallelization).}

\item{verbose}{Logical.}
}
\description{
Test for differential abundance: method 'censcyt-DA-GLMM'
}
\details{
Possible methods in 'methods_est' are:
\describe{
  \item{'cc'}{complete case, removing incomlete samples}
  \item{'pmm'}{predictive mean matching, treating censored values as missing}
  \item{'mrl'}{Mean Residual Life (Conditional single imputation from \href{https://www.researchgate.net/publication/319246304_Improved_conditional_imputation_for_linear_regression_with_a_randomly_censored_predictor}{Atem et al. 2017})}
  \item{'rs'}{Risk Set imputation}
  \item{'km'}{Kaplan Meier imputation}
}

tmp_formula <- formula(y~Surv(X,I)+z+(1|r))
data_sim <- simulate_data(
 n = 20,
 formula = tmp_formula,
 n_levels_fixeff = 2,
 type = "glmer",
 b = list(b=c(-5,-2,0.2)),
 number_of_clusters = 10,
 number_of_differential_clusters = 1)

d_counts <- data_sim[["d_counts"]]
data_sim <- data_sim[["out"]]
da_formula <- list(formula = tmp_formula,
                  data = dplyr::select(data_sim,"X","I","z","r"),
                  random_terms = TRUE)
contrast <- diffcyt::createContrast(c(0, 1, 0))

outs <- testDA_censoredGLMM(d_counts = d_counts, formula = da_formula,
                           contrast = contrast, method_est = "km",
                           verbose = FALSE, m = 10)
}
